@misc{wing2011research,
  title={Research notebook: Computational thinking—What and why? The Link Magazine, Spring},
  author={Wing, J},
  year={2011},
  publisher={Carnegie Mellon University, Pittsburgh}
}


@misc{leadership_toolkit,
	title = {Computational Thinking in K–12 Education leadership toolkit},
	author = {{ISTE, CSTE}},
	year = {2011},
}

@misc{SchulministeriumNRW2014,
	title = {Informatik - {Kernlehrplan}, {Gymnasium}/{Gesamtschule}, {Sek} {II}-4725n},
	url = {https://www.schulentwicklung.nrw.de/lehrplaene/lehrplannavigator-s-ii/gymnasiale-oberstufe/informatik/index.html},
	urldate = {2018-09-05},
	publisher = {Ritterbach},
	author = {{Ministerium für Schule und Weiterbildung des Landes Nordrhein-Westfalen}},
	year = {2014},
}

@incollection{repenning_principles_2017,
	address = {Cham},
	series = {Educational {Communications} and {Technology}: {Issues} and {Innovations}},
	title = {Principles of {Computational} {Thinking} {Tools}},
	isbn = {978-3-319-52691-1},
	url = {https://doi.org/10.1007/978-3-319-52691-1_18},
	abstract = {Computational Thinking is a fundamental skill for the twenty-first century workforce. This broad target audience, including teachers and students with no programming experience, necessitates a shift in perspective toward Computational Thinking Tools that not only provide highly accessible programming environments but explicitly support the Computational Thinking Process. This evolution is crucial if Computational Thinking Tools are to be relevant to a wide range of school disciplines including STEM, art, music, and language learning. Computational Thinking Tools must help users through three fundamental stages of Computational Thinking: problem formulation, solution expression, and execution/evaluation. This chapter outlines three principles, and employs AgentCubes online as an example, on how a Computational Thinking Tool provides support for these stages by unifying human abilities with computer affordances.},
	language = {en},
	urldate = {2018-09-05},
	booktitle = {Emerging {Research}, {Practice}, and {Policy} on {Computational} {Thinking}},
	publisher = {Springer International Publishing},
	author = {Repenning, Alexander and Basawapatna, Ashok R. and Escherle, Nora A.},
	editor = {Rich, Peter J. and Hodges, Charles B.},
	year = {2017},
	doi = {10.1007/978-3-319-52691-1_18},
	keywords = {Computational Thinking Process, Computational Thinking Tools, Principles of Computational Thinking Tools, Three stages of the Computational Thinking Process},
	pages = {291--305}
}

@book{papert1980mindstorms,
  title={Mindstorms: Children, computers, and powerful ideas},
  author={Papert, Seymour},
  year={1980},
  publisher={Basic Books, Inc.}
}

@article{rieber_seriously_1996,
	title = {Seriously considering play: {Designing} interactive learning environments based on the blending of microworlds, simulations, and games},
	volume = {44},
	shorttitle = {Seriously considering play},
	number = {2},
	journal = {Educational technology research and development},
	author = {Rieber, Lloyd P.},
	year = {1996},
	pages = {43--58},
	file = {Fulltext:/home/mo/Zotero/storage/HN2UNA85/play.html:text/html;Snapshot:/home/mo/Zotero/storage/GVC5IK2B/BF02300540.html:text/html}
}

@inproceedings{gouws2013computational,
  title={Computational thinking in educational activities: an evaluation of the educational game light-bot},
  author={Gouws, Lindsey Ann and Bradshaw, Karen and Wentworth, Peter},
  booktitle={Proceedings of the 18th ACM conference on Innovation and technology in computer science education},
  pages={10--15},
  year={2013},
  organization={ACM}
}

@inproceedings{repenning2010scalable,
  title={Scalable game design and the development of a checklist for getting computational thinking into public schools},
  author={Repenning, Alexander and Webb, David and Ioannidou, Andri},
  booktitle={Proceedings of the 41st ACM technical symposium on Computer science education},
  pages={265--269},
  year={2010},
  organization={ACM}
}


@article{kazimoglu_serious_2012,
	title = {A serious game for developing computational thinking and learning introductory computer programming},
	volume = {47},
	journal = {Procedia-Social and Behavioral Sciences},
	author = {Kazimoglu, Cagin and Kiernan, Mary and Bacon, Liz and Mackinnon, Lachlan},
	year = {2012},
	keywords = {slightly-off},
	pages = {1991--1999},
	file = {Fulltext:/home/mo/Zotero/storage/KKBVG7T3/Kazimoglu et al. - 2012 - A serious game for developing computational thinki.pdf:application/pdf;Snapshot:/home/mo/Zotero/storage/XFUY7KBY/S1877042812026742.html:text/html}
}

@article{selby_computational,
	title = {Computational {Thinking}: {The} {Developing} {Definition}},
  year = {2011},
	abstract = {Since Jeanette Wing’s use of the term computational thinking in 2006, various discussions have arisen seeking a robust definition of the phrase. With little consensus having been found in the intervening years, there are even suggestions that a definition is not important. Perhaps focus should be on how computational thinking is taught and how its acquisition might be observed. However, in order to facilitate consistent curriculum design and appropriate assessment, it is argued that a definition should still be sought.},
	language = {en},
	author = {Selby, Cynthia C and Selby, C and Woollard, John and Woollard, J},
	keywords = {ct-definition},
	pages = {6},
	file = {Selby et al. - Computational Thinking The Developing Definition.pdf:/home/mo/Zotero/storage/WNEVD5LF/Selby et al. - Computational Thinking The Developing Definition.pdf:application/pdf}
}

@article{aho_computation_2012,
	title = {Computation and computational thinking},
	volume = {55},
	number = {7},
	journal = {The Computer Journal},
	author = {Aho, Alfred V.},
	year = {2012},
	pages = {832--835},
	file = {Fulltext:/home/mo/Zotero/storage/XDACVT3Z/Aho - 2012 - Computation and computational thinking.pdf:application/pdf;Snapshot:/home/mo/Zotero/storage/VI3VTUX4/8130248.html:text/html}
}

@inproceedings{werneburg_ctgamestudiogame-based_2018,
	title = {{ctGameStudio}–{A} {Game}-{Based} {Learning} {Environment} to {Foster} {Computational} {Thinking}},
	booktitle = {Proceedings of the 2 6 th {International} {Conference} on {Computers} in  {Education}},
	author = {WERNEBURG, Sören and MANSKE, Sven and HOPPE, H. Ulrich},
	year = {2018},
	file = {ICCE2018_ctGameStudio-v24.pdf:/home/mo/Zotero/storage/LKGJMKSA/ICCE2018_ctGameStudio-v24.pdf:application/pdf;Snapshot:/home/mo/Zotero/storage/6PYYKKCK/WERNEBURG et al. - ctGameStudio–A Game-Based Learning Environment to .pdf:application/pdf}
}

@inproceedings{o2006robocode,
  title={RoboCode \& problem-based learning: a non-prescriptive approach to teaching programming},
  author={O'Kelly, Jackie and Gibson, J Paul},
  booktitle={ACM SIGCSE Bulletin},
  volume={38},
  number={3},
  pages={217--221},
  year={2006},
  organization={ACM}
}

@inproceedings{weintrop_block_2015,
	title = {To block or not to block, that is the question: students' perceptions of blocks-based programming},
	isbn = {978-1-4503-3590-4},
	shorttitle = {To block or not to block, that is the question},
	url = {http://dl.acm.org/citation.cfm?doid=2771839.2771860},
	doi = {10.1145/2771839.2771860},
	language = {en},
	urldate = {2018-05-07},
	publisher = {ACM Press},
	author = {Weintrop, David and Wilensky, Uri},
	year = {2015},
	keywords = {why-blockbased},
	pages = {199--208},
}


@article{hoppe_chapter_nodate,
	title = {Chapter 2 {Computational} {Thinking} - more than a {Variant} of {Scientific} {Inquiry}!},
	abstract = {The essence of Computational Thinking (CT) lies in the creation of “logical artifacts” that externalize and reify human ideas in a form that can be interpreted and “run” on computers. Various approaches to scientific inquiry (learning) also make use of models that are construed as logical artifacts, but here the main focus is on the correspondence of such models with natural phenomena that exist prior to these models. To pinpoint the different perspectives on CT, we have analyzed the terminology of articles from different backgrounds and periods. This survey is followed by a discussion of aspects that are specifically relevant to a computer science perspective. Abstraction in terms of data and process structures is a core feature in this context. As compared to a “free choice” of computational abstractions based on expressive and powerful formal languages, models used in scientific inquiry learning typically have limited “representational flexibility” within the boundaries of a predetermined computational approach. For the progress of CT and CT education, it is important to underline the nature of logical artifacts as the primary concern. As an example from our own work, we elaborate on “reactive rule-based programming” as an entry point that enables learners to start with situational specifications of action that can be further expanded into more standard block-based iterative programs and thus allows for a transition between different computational approaches. As an outlook beyond current practice, we finally envisage the potential of meta-level programming and program analysis techniques as a computational counterpart of meta-cognitive strategies.},
	language = {en},
	author = {Hoppe, H Ulrich and Werneburg, Sören},
	pages = {19},
	file = {Hoppe und Werneburg - Chapter 2 Computational Thinking - more than a Var.pdf:/home/mo/projects/CT Robo Match/references/Hoppe und Werneburg - Chapter 2 Computational Thinking - more than a Var.pdf:application/pdf}
}
